angular.module("ngFlux",[]),angular.module("ngFlux").factory("dispatcher",function(){var t=[];return{register:function(n){t.push(n)},dispatch:function(n){t.map(function(t){t(n)})}}}),angular.module("ngFlux").factory("eventEmitter",["$rootScope",function(t){var n=[];return{emit:function(n){t.$emit(n)},on:function(e,i){var o={fn:i,removeFn:t.$on(e,i)};n.push(o)},remove:function(t){var e=n;n.map(function(n,i){n.fn.toString()===t.toString()&&(n.removeFn(),e.splice(i,1))})}}}]),angular.module("ngFlux").factory("store",["dispatcher","eventEmitter",function(t,n){var e={},i="CHANGE_EVENT",o={init:function(){},set:function(t){var n=t.data;this._data=n},add:function(t){this._data.push(t)},all:function(){return this._data},get:function(t){return this._data.filter(function(n){return n.id===t})[0]},addChangeListener:function(t){this.on(this._name+":"+i,t)},removeChangeListener:function(t){this.remove(this._name+":"+i,t)},emitChange:function(){this.emit(this._name+":"+i),console.log(this._name+":"+i)},bind:function(t,n){this.actions[t]?this.actions[t].push(n):this.actions[t]=[n]}};return e.extend=function(e,i){return store={_name:e,_data:[],actions:{}},angular.extend(store,n,o,i),store.init(),t.register(function(t){console.log("In Dispatcher:",t),store.actions[t.actionType]&&store.actions[t.actionType].forEach(function(n){n.call(store,t.data),store.emitChange()})}),store},e}]);