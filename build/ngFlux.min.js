var ngFlux=angular.module("ngFlux",[]);ngFlux.factory("eventEmitter",function(n){var t=[];return{emit:function(t){n.$emit(name)},on:function(i,e){var o={fn:e,removeFn:n.$on(i,e)};t.push(o)},remove:function(n){var i=t;t.map(function(t,e){t.fn.toString()===n.toString()&&(t.removeFn(),i.splice(e,1))})}}}),ngFlux.factory("dispatcher",function(){var n=[];return{register:function(t){n.push(t)},dispatch:function(t){n.map(function(n){n(t)})}}}),ngFlux.factory("store",function(n,t){var i={},e="CHANGE_EVENT",o={init:function(){},set:function(n){var t=n.data;this._data=t},add:function(n){this._data.push(n)},all:function(){return this._data},get:function(n){return this._data.filter(function(t){return t.id===n})[0]},addChangeListener:function(n){this.on(e,n)},removeChangeListener:function(n){this.remove(e,n)},emitChange:function(){this.emit(e)},bind:function(n,t){this.actions[n]?this.actions[n].push(t):this.actions[n]=[t]}};return i.extend=function(i,e){return store={_name:i,_data:[],actions:{}},angular.extend(store,t,o,e),store.init(),n.register(function(n){console.log("In Dispatcher:",n),store.actions[n.actionType]&&store.actions[n.actionType].forEach(function(t){t.call(store,n.data),store.emitChange()})}),store},i});